{"version":3,"sources":["helpers/randomBytes.ts","components/Home.tsx","components/Meeting.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["randomBytes","length","bytes","Uint8Array","crypto","getRandomValues","Array","from","map","byte","toString","padStart","join","Home","useState","newMeetingHash","meetingHash","setMeetingHash","to","placeholder","value","onChange","event","target","createPeerBackup","WebSocketTracker","prototype","_createPeer","peerId","textDecoder","TextDecoder","Meeting","useParams","peers","setPeers","myStream","setMyStream","remoteStreams","setRemoteStreams","message","setMessage","messages","setMessages","useEffect","a","navigator","mediaDevices","getUserMedia","audio","video","width","ideal","height","stream","getTracks","forEach","track","stop","console","error","getMedia","opts","call","this","client","BittorrentTracker","infoHash","announce","announceList","on","peer","log","id","data","decode","start","Object","keys","ref","videoElement","getVideoTracks","newVideoTrack","srcObject","undefined","currentVideoTrack","MediaStream","autoPlay","playsInline","controls","values","remoteStream","onClick","preventDefault","send","i","App","basename","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76e00404.chunk.js","sourcesContent":["export default function randomBytes(length: number) {\n  const bytes = new Uint8Array(length)\n  crypto.getRandomValues(bytes)\n  return Array.from(bytes)\n    .map((byte) => byte.toString(16).padStart(2, '0'))\n    .join('')\n}\n","import { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport randomBytes from '../helpers/randomBytes'\n\nexport default function Home() {\n  const [newMeetingHash] = useState(() => randomBytes(20))\n  const [meetingHash, setMeetingHash] = useState('')\n\n  return (\n    <div>\n      <Link to={`/${newMeetingHash}`}>New meeting</Link>\n      <input\n        placeholder=\"Past meeting hash\"\n        value={meetingHash}\n        onChange={(event) => setMeetingHash(event.target.value)}\n      />\n      {meetingHash && <Link to={`/${meetingHash}`}>Join</Link>}\n    </div>\n  )\n}\n","import BittorrentTracker from 'bittorrent-tracker'\nimport WebSocketTracker from 'bittorrent-tracker/lib/client/websocket-tracker'\nimport { announceList } from 'create-torrent'\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport randomBytes from '../helpers/randomBytes'\nimport { Peer } from '../types/peer'\n\nconst createPeerBackup = WebSocketTracker.prototype._createPeer\n\nconst peerId = randomBytes(20)\nconst textDecoder = new TextDecoder('utf-8')\n\nexport default function Meeting() {\n  const { meetingHash } = useParams()\n  const [peers, setPeers] = useState<{ [peerId: string]: Peer }>({})\n  const [myStream, setMyStream] = useState<MediaStream>()\n  const [remoteStreams, setRemoteStreams] = useState<{\n    [peerId: string]: MediaStream\n  }>({})\n  const [message, setMessage] = useState<string>('')\n  const [messages, setMessages] = useState<string[]>([])\n\n  useEffect(() => {\n    async function getMedia() {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true,\n          video: {\n            width: { ideal: 1280 },\n            height: { ideal: 720 },\n          },\n        })\n        setMyStream(stream)\n        return () => {\n          stream.getTracks().forEach((track) => track.stop())\n        }\n      } catch (error) {\n        console.error('Error while getting media', error)\n      }\n    }\n\n    getMedia()\n  }, [])\n\n  useEffect(() => {\n    if (!myStream) {\n      return\n    }\n\n    WebSocketTracker.prototype._createPeer = function (opts: any) {\n      return createPeerBackup.call(this, { ...opts, stream: myStream })\n    }\n\n    const client = new BittorrentTracker({\n      peerId,\n      infoHash: meetingHash,\n      announce: announceList,\n    })\n\n    client.on('peer', (peer: Peer) => {\n      console.log('Peer found', peer)\n\n      peer.on('connect', () => {\n        console.log('New peer connected', peer)\n        setPeers((peers) => ({ ...peers, [peer.id]: peer }))\n      })\n\n      peer.on('close', () => {\n        console.log('Peer disconnected', peer)\n        setRemoteStreams((remoteStreams) => {\n          const { [peer.id]: removedStream, ...remainingStreams } =\n            remoteStreams\n          return remainingStreams\n        })\n        setPeers((peers) => {\n          const { [peer.id]: removedPeer, ...remaingPeers } = peers\n          return remaingPeers\n        })\n      })\n\n      peer.on('error', (error) => {\n        console.log('Peer error', error, peer)\n      })\n\n      peer.on('data', (data) => {\n        setMessages((messages) => [...messages, textDecoder.decode(data)])\n      })\n\n      peer.on('stream', (stream) => {\n        console.log('Received stream', peer, stream)\n        setRemoteStreams((remoteStreams) => ({\n          ...remoteStreams,\n          [peer.id]: stream,\n        }))\n      })\n    })\n\n    client.start()\n    return () => {\n      client.stop()\n    }\n  }, [meetingHash, myStream])\n\n  return (\n    <div>\n      <div>Meeting hash: {meetingHash}</div>\n      <div>Peers connected: {Object.keys(peers).length + 1}</div>\n      {myStream && (\n        <video\n          ref={(videoElement) => {\n            if (!videoElement) {\n              return\n            }\n            const [newVideoTrack] = myStream.getVideoTracks()\n            const [currentVideoTrack] = (\n              videoElement.srcObject as MediaStream | null\n            )?.getVideoTracks() ?? [undefined]\n            if (newVideoTrack.id === currentVideoTrack?.id) {\n              return\n            }\n            videoElement.srcObject = new MediaStream([newVideoTrack])\n          }}\n          autoPlay\n          playsInline\n          controls={false}\n        />\n      )}\n      {Object.values(remoteStreams).map((remoteStream) => (\n        <video\n          key={remoteStream.id}\n          ref={(videoElement) =>\n            videoElement &&\n            (videoElement.srcObject as any)?.id !== remoteStream.id &&\n            (videoElement.srcObject = remoteStream)\n          }\n          autoPlay\n          playsInline\n          controls={false}\n        />\n      ))}\n      <form>\n        <input\n          placeholder=\"Message\"\n          value={message}\n          onChange={(event) => setMessage(event.target.value)}\n        />\n        <button\n          onClick={(event) => {\n            event.preventDefault()\n            Object.values(peers).forEach((peer) => peer.send(message))\n            setMessages((messages) => [...messages, message])\n            setMessage('')\n          }}\n        >\n          Send\n        </button>\n      </form>\n      {messages.map((message, i) => (\n        <div key={i}>{message}</div>\n      ))}\n    </div>\n  )\n}\n","import { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport Home from './components/Home'\nimport Meeting from './components/Meeting'\n\nexport default function App() {\n  return (\n    <Router basename=\"/meettorrent\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/:meetingHash\" element={<Meeting />} />\n      </Routes>\n    </Router>\n  )\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}